# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: selkies-gstreamer-egl
  namespace: desktop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: selkies-gstreamer-egl
  template:
    metadata:
      labels:
        app: selkies-gstreamer-egl
    spec:
      # hostname: egl
      runtimeClassName: nvidia
      # Uncomment the below line to disable network isolation for WebRTC connectivity, may show an error if disallowed by the cluster
      # hostNetwork: true
      containers:
        - name: egl
          image: ghcr.io/selkies-project/nvidia-glx-desktop:latest
          imagePullPolicy: Always
          env:
            - name: TZ
              value: "UTC"
            - name: SIZEW
              value: "1920"
            - name: SIZEH
              value: "1080"
            - name: REFRESH
              value: "60"
            - name: DPI
              value: "144"
            - name: CDEPTH
              value: "24"
            - name: VIDEO_PORT
              value: "DP-0"
            - name: PASSWD
              valueFrom:
               secretKeyRef:
                 name: selkies-auth-secret
                 key: password
            ###
            # selkies-gstreamer parameters, for additional configurations see lines that start with "parser.add_argument" in https://github.com/selkies-project/selkies-gstreamer/blob/master/src/selkies_gstreamer/__main__.py
            ###
            # Change `WEBRTC_ENCODER` to `x264enc`, `vp8enc`, or `vp9enc` if you are using software fallback without allocated GPUs or your GPU doesn't support `H.264 (AVCHD)` under the `NVENC - Encoding` section in https://developer.nvidia.com/video-encode-and-decode-gpu-support-matrix-new
            - name: WEBRTC_ENCODER
              value: "nvh264enc"
            - name: WEBRTC_ENABLE_RESIZE
              value: "false"
            - name: ENABLE_BASIC_AUTH
              value: "true"
            - name: ENABLE_HTTPS_WEB
              value: "false"
          ###
          # Uncomment below to use a TURN server for improved network compatibility
          ###
            - name: TURN_HOST
              value: "192.168.2.251"
            - name: TURN_PORT
              value: "3478"
            - name: TURN_USERNAME
              valueFrom:
               secretKeyRef:
                 name: stunner-auth-secret
                 key: username
            - name: TURN_PASSWORD
              valueFrom:
               secretKeyRef:
                 name: stunner-auth-secret
                 key: password
          # # Change to `tcp` if the UDP protocol is throttled or blocked in your client network, or when the TURN server does not support UDP
            - name: TURN_PROTOCOL
              value: "udp"
          # You need a valid hostname and a certificate from authorities such as ZeroSSL (Let's Encrypt may have issues) to enable this
          #        - name: TURN_TLS
          #          value: "false"
          stdin: true
          tty: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              memory: 16Gi
              cpu: "8"
              nvidia.com/gpu: 1
            requests:
              memory: 100Mi
              cpu: 100m
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /cache
              name: selkies-volume
              subPath: cache
            - mountPath: /home/user
              name: selkies-volume
              subPath: home
            - mountPath: /data
              name: selkies-volume
              subPath: static-server
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: selkies-volume
          persistentVolumeClaim:
            claimName: selkies-claim
